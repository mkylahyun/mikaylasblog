[
  {
    "objectID": "posts/final_audiofeatures.html",
    "href": "posts/final_audiofeatures.html",
    "title": "mikaylasblog",
    "section": "",
    "text": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly_express as px"
  },
  {
    "objectID": "posts/final_audiofeatures.html#spotify-api-data-pre-processing",
    "href": "posts/final_audiofeatures.html#spotify-api-data-pre-processing",
    "title": "mikaylasblog",
    "section": "1. Spotify API Data Pre-processing",
    "text": "1. Spotify API Data Pre-processing\nSince we are getting data from the web, Spotify’s API, I went to https://developer.spotify.com/dashboard/login and got my credentials to access the data.\n\nimport spotipy\nfrom spotipy.oauth2 import SpotifyClientCredentials\nimport spotify_key\nsp = spotipy.Spotify(auth_manager=SpotifyClientCredentials(client_id=spotify_key.CLIENT_ID,\n                                                           client_secret=spotify_key.CLIENT_SECRET))\n\n\nTop Songs - Spotify Weekly Song Charts\nI am interested in what songs are the most popular in each country, so I focused on the weekly “Top Songs” playlist for each, which is curated by Spotify already.\n\n'''\nplaylists = sp.search(q = 'Spotify Weekly Top Song Chart', type = 'playlist', limit = 49)\n\n# looking at playlist names and playlist urls\nfor idx, name in enumerate(playlists['playlists']['items']):\n    print(idx, name['name'], ':', list(name['external_urls'].values()) )\n\n\n\nplaylist_df = pd.DataFrame.from_dict(playlists['playlists'])\nplaylist_df.to_csv('playlist_info')\n\n'''\n\n\"\\nplaylists = sp.search(q = 'Spotify Weekly Top Song Chart', type = 'playlist', limit = 49)\\n\\n# looking at playlist names and playlist urls\\nfor idx, name in enumerate(playlists['playlists']['items']):\\n    print(idx, name['name'], ':', list(name['external_urls'].values()) )\\n\\n\\n\\nplaylist_df = pd.DataFrame.from_dict(playlists['playlists'])\\nplaylist_df.to_csv('playlist_info')\\n\\n\"\n\n\n\n'''\ncountry = []\nurl = []\n\n\n# getting playlist names and playlist urls\nfor i in playlists['playlists']['items']:\n  country.append(i['name'])\n  url.append(list(i['external_urls'].values()))\n\n# combining list of lists into one\ncombined_url = [urls for list in url for urls in list]\n\n# getting playlist uris\nlinks = []\nfor u in combined_url:\n  links.append(u.split(\"/\")[-1].split(\"?\")[0])\n\n'''\n\n'\\ncountry = []\\nurl = []\\n\\n\\n# getting playlist names and playlist urls\\nfor i in playlists[\\'playlists\\'][\\'items\\']:\\n  country.append(i[\\'name\\'])\\n  url.append(list(i[\\'external_urls\\'].values()))\\n\\n# combining list of lists into one\\ncombined_url = [urls for list in url for urls in list]\\n\\n# getting playlist uris\\nlinks = []\\nfor u in combined_url:\\n  links.append(u.split(\"/\")[-1].split(\"?\")[0])\\n\\n'\n\n\n\n'''\nrank = []\nplaylist_name = []\nartist_name = []\ntrack_name = []\npopularity = []\ntrack_id = []\nartist_uri = []\nartist_info = []\nartist_pop = []\nartist_genres = []\n\nfor l in links:\n    for track in sp.playlist_tracks(l, limit = 10)['items']:\n        \n        # Playlist\n        playlist_name.append(country[links.index(l)])\n        \n        # Rank\n        rank.append(list(sp.playlist_tracks(l)['items']).index(track) + 1)\n        \n        # Track id\n        track_id.append(track['track']['id'])\n    \n        #T rack name\n        track_name.append(track['track']['name'])\n    \n        # Artist\n        artist_uri = track['track']['artists'][0]['uri']\n        artist_info = sp.artist(artist_uri)\n    \n        # Name, popularity, genre\n        artist_name.append(track['track']['artists'][0]['name'])\n        artist_pop.append(artist_info['popularity'])\n        \n        if len(artist_info['genres']) > 0:\n          artist_genres.append(artist_info['genres'][0])\n        else:\n          artist_genres.append('None')\n\n        # Popularity of the track\n        popularity.append(track['track']['popularity'])\n\n\n'''\n\n\"\\nrank = []\\nplaylist_name = []\\nartist_name = []\\ntrack_name = []\\npopularity = []\\ntrack_id = []\\nartist_uri = []\\nartist_info = []\\nartist_pop = []\\nartist_genres = []\\n\\nfor l in links:\\n    for track in sp.playlist_tracks(l, limit = 10)['items']:\\n        \\n        # Playlist\\n        playlist_name.append(country[links.index(l)])\\n        \\n        # Rank\\n        rank.append(list(sp.playlist_tracks(l)['items']).index(track) + 1)\\n        \\n        # Track id\\n        track_id.append(track['track']['id'])\\n    \\n        #T rack name\\n        track_name.append(track['track']['name'])\\n    \\n        # Artist\\n        artist_uri = track['track']['artists'][0]['uri']\\n        artist_info = sp.artist(artist_uri)\\n    \\n        # Name, popularity, genre\\n        artist_name.append(track['track']['artists'][0]['name'])\\n        artist_pop.append(artist_info['popularity'])\\n        \\n        if len(artist_info['genres']) > 0:\\n          artist_genres.append(artist_info['genres'][0])\\n        else:\\n          artist_genres.append('None')\\n\\n        # Popularity of the track\\n        popularity.append(track['track']['popularity'])\\n\\n\\n\"\n\n\n\n\nGetting Audio Features\nI plan to look at audio feature trends for each country’s popular songs so I made imported data for audio features from Spotify API as well.\n\nimport pandas as pd\n\n# getting audio features for each track id\naudio = []\nfor id in track_id:\n    if sp.audio_features(id):\n        audio.append(sp.audio_features(id))\n    else:\n        audio.append('None')\n\n\n# combining list of lists\ncombined_audio = [aud for list in audio for aud in list]\n\n# creating dataframe\naudio_df = pd.DataFrame(combined_audio)\n\n# getting only columns I need\naudio_df = audio_df[['acousticness','danceability','energy','instrumentalness','valence']]\naudio_df.to_csv('audio_features.csv',index = False)\n\naud_df = pd.read_csv('audio_features.csv')\n\n\nAudio Features\n\nAcousticness represents how acoustic a track is. High confidence a track is acoustic is indicated by 1.0.\nDanceability indicates how suitable a track is for dancing based on tempo, beat, strength, and other features. 1.0 is most danceable.\nEnergy represents the perceived measure of intensity and activity, with high energy track feeling fast and loud.\nInstrumentalness indicates whether a track contains mostly instrumentals with no vocals. The higher the value is, the greater likelihood the track has no vocals.\nValence describes the positiveness of a track. High valence tracks sound happy and low valence tracks sound sad.\n\nI have gathered the important data needed, which includes rank, playlist name, artist name, track name, track id, track popularity, artist popularity, artist genre, acousticness, danceability, energy, instrumentalness, and valence. After gathering specific information, I put it together in a dataframe.\n\ndf = pd.DataFrame({'rank' : rank,\n                   'playlist' : playlist_name,\n                   'artist_name' : artist_name,\n                   'track_name' : track_name,\n                   'track popularity': popularity,\n                   'artist genre': artist_genres,\n                   'acousticness': list(aud_df['acousticness']),\n                   'danceability': list(aud_df['danceability']),\n                   'energy': list(aud_df['energy']),\n                   'instrumentalness':  list(aud_df['instrumentalness']),\n                   'valence': list(aud_df['valence']),\n                   'track_id' : track_id})\n\nI converted the dataframe to a csv file and imported it again.\n\n# df.to_csv('top_songs_playlist.csv', index = False)\n\n\nimport pandas as pd\ntop10_df = pd.read_csv('top_songs_playlist.csv')\ntop10_df\n\n\n\n\n\n  \n    \n      \n      rank\n      playlist\n      artist_name\n      track_name\n      track popularity\n      artist genre\n      acousticness\n      danceability\n      energy\n      instrumentalness\n      valence\n      track_id\n    \n  \n  \n    \n      0\n      1\n      Top Songs - USA\n      Morgan Wallen\n      Last Night\n      83\n      contemporary country\n      0.4670\n      0.492\n      0.675\n      0.000000\n      0.478\n      7K3BhSpAxZBznislvUMVtn\n    \n    \n      1\n      2\n      Top Songs - USA\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.2520\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n    \n    \n      2\n      3\n      Top Songs - USA\n      SZA\n      Kill Bill\n      93\n      pop\n      0.0521\n      0.644\n      0.735\n      0.144000\n      0.418\n      1Qrg8KqiBpW07V7PNxwwwL\n    \n    \n      3\n      4\n      Top Songs - USA\n      Miley Cyrus\n      Flowers\n      82\n      pop\n      0.0632\n      0.707\n      0.681\n      0.000005\n      0.646\n      4DHcnVTT87F0zZhRPYmZ3B\n    \n    \n      4\n      5\n      Top Songs - USA\n      The Weeknd\n      Die For You (with Ariana Grande) - Remix\n      67\n      canadian contemporary r&b\n      0.2270\n      0.575\n      0.500\n      0.000000\n      0.506\n      4W4fNrZYkobj539TOWsLO2\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      485\n      6\n      Top Songs - New Zealand\n      Harry Styles\n      As It Was\n      90\n      pop\n      0.3420\n      0.520\n      0.731\n      0.001010\n      0.662\n      4Dvkj6JhhA12EX05fT7y2e\n    \n    \n      486\n      7\n      Top Songs - New Zealand\n      Coi Leray\n      Players\n      90\n      new jersey underground rap\n      0.0300\n      0.954\n      0.516\n      0.000008\n      0.624\n      6UN73IYd0hZxLi8wFPMQij\n    \n    \n      487\n      8\n      Top Songs - New Zealand\n      Miguel\n      Sure Thing\n      91\n      dance pop\n      0.0267\n      0.684\n      0.607\n      0.000307\n      0.498\n      0JXXNGljqupsJaZsgSbMZV\n    \n    \n      488\n      9\n      Top Songs - New Zealand\n      Libianca\n      People\n      88\n      None\n      0.5510\n      0.573\n      0.422\n      0.000013\n      0.693\n      26b3oVLrRUaaybJulow9kz\n    \n    \n      489\n      10\n      Top Songs - New Zealand\n      RAYE\n      Escapism.\n      79\n      dance pop\n      0.1380\n      0.538\n      0.742\n      0.000047\n      0.250\n      5mHdCZtVyb4DcJw8799hZp\n    \n  \n\n490 rows × 12 columns"
  },
  {
    "objectID": "posts/final_audiofeatures.html#world-happiness-data-world-depression-data",
    "href": "posts/final_audiofeatures.html#world-happiness-data-world-depression-data",
    "title": "mikaylasblog",
    "section": "2. World Happiness Data & World Depression Data",
    "text": "2. World Happiness Data & World Depression Data\nAfter importing the datasets, I noticed that there were countries that were not included in the Spotify dataset. I threfore pre-processed the data to include only the countries that are in all three datasets.\n\n# importing world happiness data\nhappiness_df = pd.read_csv('world-happiness-data.csv', header = 0, sep = ',')\n\n# importing world happiness data\ndepression_df = pd.read_csv('depression-data-2023.csv')\n\n# checking countries \nwh_countries = list(happiness_df['Country'])\nwd_countries = list(depression_df['country'])\n    \n# getting all playlist names\ncountries = list(top10_df['playlist'].unique())\n\nTo only get the country’s name in the playlist names, I created a for loop that would remove the “Top Songs -”.\nWhile reviewing the countries that are in the dataset, I immediately saw that Spotify indicated United States as “USA” while the other two datasets indicated it as “United States” so I changed it in the list of retrieved country names that I made from the Spotify data.\n\n# using for loop to only get country in playlist name\nfor i in range(len(countries)):\n    countries[i] = countries[i][12:]\n\n# changing USA to United States \ncountries[0] = 'United States'\n\n# getting common countries in data sets\ncommon_country = []\nfor c in countries:\n    if c in wh_countries and c in wd_countries:\n        common_country.append(c)\n\n\n# checking what countries in Spotify are not in common_country\nnot_common = []\nfor i in countries:\n    if i not in common_country:\n        not_common.append(i)\nnot_common\n\n['Global', 'Taiwan', 'Hong Kong', 'Ecuador', 'Czech Republic']\n\n\nAfter checking the unique values, I saw the Taiwan and Hong Kong were not in the depression dataset but Czech Republic was in the happiness dataset by the name of ‘Czechia’ so I appended ‘Czech Republic’ and ‘Czechia’ to the common_country list\n\n# checking\nhappiness_df['Country'].unique()\ndepression_df['country'].unique()\n\ncommon_country.append('Czech Republic')\ncommon_country.append('Czechia')\n\nNow I got the rows and features of interest and saved it as a new csv and imported it for both datasets.\n\n# getting rows for only common countries in Spotify data\nwhdf = happiness_df[happiness_df['Country'].isin(common_country)]\nwddf = depression_df[depression_df['country'].isin(common_country)]\n\n# getting features of interest\nwhdf = whdf[['RANK', 'Country', 'Happiness score']]\nwddf = wddf[['country','region','prevalence', 'cases', 'pop2023']]\n\n# saving data\nwhdf.to_csv('world-happiness-cleaned.csv', index=False)\nwddf.to_csv('world-depression-cleaned.csv', index=False)\n\n# importing data\nwh_data = pd.read_csv('world-happiness-cleaned.csv')\nwd_data = pd.read_csv('world-depression-cleaned.csv')\n\nI did a final check to see if all the countries in both data sets were common and had the same number of rows\n\n# checking size\nprint(wh_data.shape)\nprint(wd_data.shape)\n\n# checking countries are all same\nwh_data['Country'].unique() in wd_data['country'].unique()\n\n(45, 3)\n(45, 5)\n\n\nTrue\n\n\n\nMerging Datasets\nTo have the happiness and depression scores in the Top Songs Playlist dataset, I extracted the happiness and depression values for each country that matched the country’s playlist in Spotify data and added to the top10_df data frame. I also removed all the playlists that did not have happiness or depression scores.\n\nnew_col = []\n\nfor playlist in top10_df['playlist']:\n    playlist = playlist[12:]\n    if playlist == 'USA':\n        row = wh_data.loc[wh_data['Country'] == 'United States']\n        hap_score = list(row['Happiness score'])\n        new_col.append(hap_score)\n    elif playlist == 'Czech Republic':\n        row = wh_data.loc[wh_data['Country'] == 'Czechia']\n        hap_score = list(row['Happiness score'])\n        new_col.append(hap_score)\n    elif playlist in common_country:\n        row = wh_data.loc[wh_data['Country'] == playlist]\n        hap_score = list(row['Happiness score'])\n        new_col.append(hap_score)\n    else:\n        new_col.append([0])\nhappiness_col = sum(new_col,[])\n\n# adding happiness score to top 10 playlists data frame\ntop10_df['Happiness Score'] = happiness_col\ntop10_df = top10_df[top10_df['Happiness Score'] != 0]\n\n\ndep_col = []\n\nfor playlist in top10_df['playlist']:\n    playlist = playlist[12:]\n    if playlist == 'USA':\n        row = wd_data.loc[wd_data['country'] == 'United States']\n        dep_score = list(row['prevalence'])\n        dep_col.append(dep_score)\n    elif playlist in common_country:\n        row = wd_data.loc[wd_data['country'] == playlist]\n        dep_score = list(row['prevalence'])\n        dep_col.append(dep_score)\n    else:\n        dep_col.append([0])\n\ndepression_col = sum(dep_col,[])\n\n# adding happiness score to top 10 playlists data frame\ntop10_df['Depression Prevalence'] = depression_col\ntop10_df = top10_df[top10_df['Depression Prevalence'] != 0].copy()\n\n/tmp/ipykernel_184/2697268719.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  top10_df['Depression Prevalence'] = depression_col"
  },
  {
    "objectID": "posts/final_audiofeatures.html#exploring-the-data-through-data-visualizations",
    "href": "posts/final_audiofeatures.html#exploring-the-data-through-data-visualizations",
    "title": "mikaylasblog",
    "section": "Exploring the Data through Data Visualizations",
    "text": "Exploring the Data through Data Visualizations\n\n1. Spotify Data - Top Songs Playlist Data\nI found that some artist genre were missing so I appended ‘None’ to each and saw which country’s playlist had ‘None’.\n\ntop10_df.loc[(top10_df['artist genre'] == 'None')]\n\n\n\n\n\n  \n    \n      \n      rank\n      playlist\n      artist_name\n      track_name\n      track popularity\n      artist genre\n      acousticness\n      danceability\n      energy\n      instrumentalness\n      valence\n      track_id\n      Happiness Score\n      Depression Prevalence\n    \n  \n  \n    \n      1\n      2\n      Top Songs - USA\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      6.977\n      5.9\n    \n    \n      39\n      10\n      Top Songs - Japan\n      natori\n      Overdose\n      77\n      None\n      0.030700\n      0.733\n      0.598\n      0.000017\n      0.831\n      2Dzzhb1oV5ckgOjWZLraIB\n      6.039\n      4.2\n    \n    \n      49\n      10\n      Top Songs - South Korea\n      LE SSERAFIM\n      ANTIFRAGILE\n      85\n      None\n      0.082100\n      0.882\n      0.797\n      0.000000\n      0.824\n      4fsQ0K37TOXa3hEQfjEic1\n      5.935\n      4.1\n    \n    \n      64\n      5\n      Top Songs - Brazil\n      Treyce\n      Lovezinho\n      83\n      None\n      0.295000\n      0.824\n      0.587\n      0.000003\n      0.605\n      5smr3wYPodiv8ogWy0DE6J\n      6.293\n      5.8\n    \n    \n      86\n      7\n      Top Songs - Philippines\n      Adie\n      Mahika\n      77\n      None\n      0.742000\n      0.635\n      0.451\n      0.000000\n      0.601\n      47sq83n5WN22ZzYnGn8aTy\n      5.904\n      3.3\n    \n    \n      102\n      3\n      Top Songs - Germany\n      AYLIVA\n      Sie weiß (feat. Mero)\n      80\n      None\n      0.517000\n      0.792\n      0.679\n      0.000015\n      0.204\n      7DyDjhZMEIK5Ied4juTCyc\n      7.034\n      5.2\n    \n    \n      120\n      1\n      Top Songs - Argentina\n      Big One\n      En La Intimidad | CROSSOVER #1\n      83\n      None\n      0.092400\n      0.804\n      0.555\n      0.000000\n      0.640\n      7w7BrPbOjF5OxChs2dxFve\n      5.967\n      4.7\n    \n    \n      127\n      8\n      Top Songs - Argentina\n      Taiu\n      Rara Vez\n      85\n      None\n      0.176000\n      0.838\n      0.708\n      0.000000\n      0.960\n      7MVIfkyzuUmQ716j8U7yGR\n      5.967\n      4.7\n    \n    \n      153\n      4\n      Top Songs - Italy\n      Matteo Paolillo - Icaro\n      ORIGAMI ALL'ALBA - CLARA\n      76\n      None\n      0.577000\n      0.633\n      0.751\n      0.000000\n      0.430\n      3X6QTmtaKukOu5lISJYi4g\n      6.467\n      5.1\n    \n    \n      154\n      5\n      Top Songs - Italy\n      Tananai\n      TANGO\n      71\n      None\n      0.232000\n      0.330\n      0.668\n      0.000000\n      0.323\n      74cyFjvgjyiFiQ3QxszFWq\n      6.467\n      5.1\n    \n    \n      166\n      7\n      Top Songs - Israel\n      Static\n      לירז\n      56\n      None\n      0.030400\n      0.682\n      0.764\n      0.000000\n      0.729\n      50uspwzqbMxkpyHzMLwUVy\n      7.364\n      4.6\n    \n    \n      170\n      1\n      Top Songs - United Kingdom\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      6.943\n      4.5\n    \n    \n      191\n      2\n      Top Songs - Ukraine\n      ThxSoMch\n      SPIT IN MY FACE!\n      87\n      None\n      0.046400\n      0.730\n      0.785\n      0.021600\n      0.649\n      1N8TTK1Uoy7UvQNUazfUt5\n      5.084\n      6.3\n    \n    \n      192\n      3\n      Top Songs - Ukraine\n      INTERWORLD\n      METAMORPHOSIS\n      87\n      None\n      0.426000\n      0.593\n      0.641\n      0.901000\n      0.147\n      2ksyzVfU0WJoBpu8otr4pz\n      5.084\n      6.3\n    \n    \n      210\n      1\n      Top Songs - Australia\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      7.162\n      5.9\n    \n    \n      220\n      1\n      Top Songs - Indonesia\n      Raim Laode\n      Komang\n      84\n      None\n      0.415000\n      0.696\n      0.412\n      0.000062\n      0.349\n      2AaaE0qvFWtyT8srKNfRhH\n      5.240\n      3.7\n    \n    \n      223\n      4\n      Top Songs - Indonesia\n      Aruma\n      Muak\n      80\n      None\n      0.774000\n      0.265\n      0.320\n      0.000146\n      0.185\n      3N2WeXxSjngB1DSi8vrI8C\n      5.240\n      3.7\n    \n    \n      230\n      1\n      Top Songs - Thailand\n      เรนิษรา\n      ผู้ถูกเลือกให้ผิดหวัง (ดอกไม้ฤดูหนาว) - Sad fl...\n      71\n      None\n      0.521000\n      0.579\n      0.341\n      0.103000\n      0.375\n      7BUHKcrvmr9WIAgEBkwukl\n      5.891\n      4.4\n    \n    \n      231\n      2\n      Top Songs - Thailand\n      Newery\n      กลิ่นดอกไม้\n      65\n      None\n      0.099700\n      0.495\n      0.702\n      0.000010\n      0.461\n      5OaXaynJZgklXEwzhouey5\n      5.891\n      4.4\n    \n    \n      243\n      4\n      Top Songs - Poland\n      Jann\n      Gladiator\n      70\n      None\n      0.173000\n      0.648\n      0.785\n      0.003830\n      0.239\n      0vbp3qthXlRVsLXTbPrkX1\n      6.123\n      5.1\n    \n    \n      246\n      7\n      Top Songs - Poland\n      2115\n      DRESSCODE\n      70\n      None\n      0.161000\n      0.787\n      0.564\n      0.000002\n      0.718\n      3Nqxx5fdl3FQlrk3zarRmA\n      6.123\n      5.1\n    \n    \n      249\n      10\n      Top Songs - Poland\n      Bambi\n      IRL\n      70\n      None\n      0.173000\n      0.666\n      0.668\n      0.000003\n      0.454\n      0Mh7nzWn5BHJSenmaUSEt6\n      6.123\n      5.1\n    \n    \n      251\n      2\n      Top Songs - Ireland\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      7.041\n      4.8\n    \n    \n      277\n      8\n      Top Songs - Peru\n      Taiu\n      Rara Vez\n      85\n      None\n      0.176000\n      0.838\n      0.708\n      0.000000\n      0.960\n      7MVIfkyzuUmQ716j8U7yGR\n      5.559\n      4.8\n    \n    \n      302\n      3\n      Top Songs - Canada\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      7.025\n      4.7\n    \n    \n      314\n      5\n      Top Songs - Belgium\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      6.805\n      4.8\n    \n    \n      321\n      2\n      Top Songs - Sweden\n      Smash Into Pieces\n      Six Feet Under\n      71\n      None\n      0.000556\n      0.448\n      0.917\n      0.000000\n      0.381\n      5DYCuzBPf13q0QZwQvjYzi\n      7.384\n      4.9\n    \n    \n      332\n      3\n      Top Songs - Austria\n      AYLIVA\n      Sie weiß (feat. Mero)\n      80\n      None\n      0.517000\n      0.792\n      0.679\n      0.000015\n      0.204\n      7DyDjhZMEIK5Ied4juTCyc\n      7.163\n      5.1\n    \n    \n      340\n      1\n      Top Songs - Turkey\n      Semicenk\n      Yana Yana\n      78\n      None\n      0.111000\n      0.793\n      0.718\n      0.000001\n      0.557\n      7p0ODIG60DRkcTiVlJPgck\n      4.744\n      4.4\n    \n    \n      342\n      3\n      Top Songs - Turkey\n      Semicenk\n      Sevecek Sandım\n      75\n      None\n      0.360000\n      0.839\n      0.633\n      0.000000\n      0.592\n      7dWOeNUJfixlvUcpZD90YE\n      4.744\n      4.4\n    \n    \n      362\n      3\n      Top Songs - Netherlands\n      Maks\n      Dyscalculie\n      68\n      None\n      0.314000\n      0.812\n      0.724\n      0.000003\n      0.707\n      0LNT7X2PU2gg8vpMZHC37n\n      7.415\n      4.7\n    \n    \n      363\n      4\n      Top Songs - Netherlands\n      Claude\n      Ladada (Mon Dernier Mot)\n      73\n      None\n      0.510000\n      0.755\n      0.569\n      0.000018\n      0.708\n      0LVjBdjZvJykxed42ExTLf\n      7.415\n      4.7\n    \n    \n      370\n      1\n      Top Songs - South Africa\n      2Point1\n      Stimela\n      61\n      None\n      0.006170\n      0.799\n      0.622\n      0.000139\n      0.785\n      0AY3sNqV7qAdAZ8j6TRVBd\n      5.194\n      4.6\n    \n    \n      372\n      3\n      Top Songs - South Africa\n      Pcee\n      Kilimanjaro (feat. Justin99, Mema_Percent & Mr...\n      59\n      None\n      0.005850\n      0.807\n      0.474\n      0.001610\n      0.664\n      4aAxUQUNTtBhDgDcyCfXUu\n      5.194\n      4.6\n    \n    \n      376\n      7\n      Top Songs - South Africa\n      Libianca\n      People\n      88\n      None\n      0.551000\n      0.573\n      0.422\n      0.000013\n      0.693\n      26b3oVLrRUaaybJulow9kz\n      5.194\n      4.6\n    \n    \n      378\n      9\n      Top Songs - South Africa\n      Ayra Starr\n      Rush\n      77\n      None\n      0.036900\n      0.792\n      0.503\n      0.000570\n      0.381\n      1xs8bOvm3IzEYmcLJVOc34\n      5.194\n      4.6\n    \n    \n      379\n      10\n      Top Songs - South Africa\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      5.194\n      4.6\n    \n    \n      398\n      9\n      Top Songs - Singapore\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      6.480\n      4.6\n    \n    \n      405\n      6\n      Top Songs - Norway\n      Alessandra\n      Queen of Kings\n      78\n      None\n      0.069600\n      0.563\n      0.908\n      0.000000\n      0.171\n      14LdhxElpZS0rKVV4nxtdA\n      7.365\n      4.7\n    \n    \n      439\n      10\n      Top Songs - Malaysia\n      Dalia Farhana\n      Langit Yang Sama\n      63\n      None\n      0.807000\n      0.626\n      0.394\n      0.000000\n      0.341\n      2CJvBRL5ZevYir3mbFdcm6\n      5.711\n      3.8\n    \n    \n      440\n      1\n      Top Songs - Saudi Arabia\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      6.523\n      4.5\n    \n    \n      445\n      6\n      Top Songs - Saudi Arabia\n      INTERWORLD\n      METAMORPHOSIS\n      87\n      None\n      0.426000\n      0.593\n      0.641\n      0.901000\n      0.147\n      2ksyzVfU0WJoBpu8otr4pz\n      6.523\n      4.5\n    \n    \n      457\n      8\n      Top Songs - Romania\n      Stefan Costea\n      Lipsa Ta\n      52\n      None\n      0.594000\n      0.722\n      0.518\n      0.000000\n      0.483\n      2Vvb9PCb8Sg6nwjvzb0Kwo\n      6.477\n      5.0\n    \n    \n      480\n      1\n      Top Songs - New Zealand\n      PinkPantheress\n      Boy's a liar Pt. 2\n      95\n      None\n      0.252000\n      0.696\n      0.809\n      0.000128\n      0.857\n      6AQbmUe0Qwf5PZnt4HmTXv\n      7.200\n      5.4\n    \n    \n      488\n      9\n      Top Songs - New Zealand\n      Libianca\n      People\n      88\n      None\n      0.551000\n      0.573\n      0.422\n      0.000013\n      0.693\n      26b3oVLrRUaaybJulow9kz\n      7.200\n      5.4\n    \n  \n\n\n\n\n\n# exploring what genres were most common overall\ntop10_df['artist genre'].value_counts().sort_values()[-10:].plot.barh()\nplt.title('Most Common Genre')\nplt.show()\n\n\n\n\n\n“None” had the most count for artist genre, with “pop” coming close to highest and then “reggaeton”, “k-pop”, “canadian contemporary r&b”, and “colombian pop”. I also explored what country had the most amount of “None” values for artist genre.\n\nSouth Africa had the most amount of ‘none’ values for artist genre, with Poland coming second, and Ukraine, Turkey, and Thailand and many others having either 1 or 2 ‘None’ artist genres.\n\ntop10_df.loc[top10_df['artist genre'] == 'None', 'playlist'].value_counts()\n\nTop Songs - South Africa      5\nTop Songs - Poland            3\nTop Songs - Ukraine           2\nTop Songs - Turkey            2\nTop Songs - Thailand          2\nTop Songs - Indonesia         2\nTop Songs - Netherlands       2\nTop Songs - New Zealand       2\nTop Songs - Italy             2\nTop Songs - Argentina         2\nTop Songs - Saudi Arabia      2\nTop Songs - Singapore         1\nTop Songs - Belgium           1\nTop Songs - Norway            1\nTop Songs - Malaysia          1\nTop Songs - Romania           1\nTop Songs - Austria           1\nTop Songs - Sweden            1\nTop Songs - USA               1\nTop Songs - Canada            1\nTop Songs - Peru              1\nTop Songs - Japan             1\nTop Songs - Australia         1\nTop Songs - United Kingdom    1\nTop Songs - Israel            1\nTop Songs - Germany           1\nTop Songs - Philippines       1\nTop Songs - Brazil            1\nTop Songs - South Korea       1\nTop Songs - Ireland           1\nName: playlist, dtype: int64\n\n\n\nAudio Features\nSince I will be exploring the relationship between country’s happiness/depression score and audio feature trends, I wanted to see what the overall mean was for each audio feature.\n\nThe data shows that ‘danceability’, ‘energy’, and ‘valence’ has the highest mean values and ’instrumentalness has the lowest.\n\nThis suggests that most countries prefer songs with vocals rather than pure instrumentals and songs that are high in energy and danceable.\n\n# mean audio features overall \ntop10_df[['acousticness','danceability','energy','instrumentalness','valence']].mean().plot.barh()\n\nplt.title('Audio Feature Means')\nplt.show()\n\n\n\n\n\nValence\nValence describes the positiveness of a track, in which high valence tracks sound happy and low valence tracks sound sad, so I made a scatter plot to see if there was an overall correlation between track popularity and valence scores. There seems to be no correlation between the two.\n\nsns.scatterplot(x = 'track popularity', y='valence', data = top10_df)\nplt.xlabel('Track Popularity')\nplt.ylabel('Valence')\nplt.title('Relationship Between Track Popularity and Valence')\nplt.show()\n\n\n\n\n\n\n\nPlaylist with high mean valence score\nAs I will be looking at happiness and depression scores too, I made a horizontal bar chart to visualize which playlist had the highest mean valence score. It will be interesting to analyze after viewing the happiness and depression data whether the countries’ playlists with high mean valence scores reflect any relationship between the two. * Argentina, Spain, Mexico, South Korea, and Guatemala are the countries with highest mean valence scores for their playlist. As these countries are known for their popular genres, raggaeton or k-pop, this suggests that there also may be some correlation bewteen other audio features such as valence and the danceability of the songs. I will keep these countries’ playlists in mind when looking at the happiness score dataset - will these countries be in the top highest happiness scores?\n\ntop10_df.groupby('playlist')['valence'].mean().sort_values().plot.barh(figsize = (8,10))\nplt.title('Playlist Sorted by Valence Means')\nplt.show()\n\n\n\n\n\n\n\n2. World Happiness Dataset\nTo visualize which countries had the highest happiness score, I sorted the countries by happiness scores and plotted it in a bar chart from highest to lowest happiness score.\n\nhappiness_df.columns\n\nIndex(['RANK', 'Country', 'Happiness score', 'Whisker-high', 'Whisker-low',\n       'Dystopia (1.83) + residual', 'Explained by: GDP per capita',\n       'Explained by: Social support', 'Explained by: Healthy life expectancy',\n       'Explained by: Freedom to make life choices',\n       'Explained by: Generosity', 'Explained by: Perceptions of corruption',\n       'Unnamed: 12', 'Unnamed: 13', 'Unnamed: 14', 'Unnamed: 15',\n       'Unnamed: 16', 'Unnamed: 17', 'Unnamed: 18', 'Unnamed: 19',\n       'Unnamed: 20', 'Unnamed: 21', 'Unnamed: 22', 'Unnamed: 23'],\n      dtype='object')\n\n\nFinland had the highest happiness score, with Denmark coming very close. I saw that the top 5 countries with highest happiness score were all from Northern or Western Europe regions.\nIndia had the lowest happiness score, with Egypt having the second lowest. Three out of the five lowest happiness scores were from regions in Asia.\n\nscores = wh_data.sort_values(by = 'Happiness score')\nscores.plot(x = 'Country', y = 'Happiness score', kind = 'barh', figsize = (12, 7), color = 'orange')\n\nplt.title('World Happiness Score')\nplt.xlabel('Happiness Score')\nplt.tight_layout()\n\n\n\n\n\n\n3. World Depression Data\nTo also visualize the depression scores, I sorted the countries from highest to lowest prevalence of depression. As seen in the Happiness data, Ukraine was one of the lowest 5 happiness score countries and I was able to see again from the data visualization below that Ukraine had the highest depression prevalence. An interesting point to note was that Finland, which had the highest happiness score, was one of the 5 countries with highest depression prevalence as well. > It is important to question who was included in the data and how it was collected.\nAlthough Egypt was second lowest scoring for the Happiness data, it is also second lowest in prevalence of depression. I would assume that prevalence of depression would be higher in Egypt than in Finland, but this is not the case shown by this data set. The data suggests that there may have been some external factors such as negative stigma around mental health or different cultural backgrounds that led to lower prevalence of depression.\nWho is able to be represented in the data is also crticial, as some countries in this data may not have proper health systems or access to mental health care, leading to lower reports of depression.\nCultural factors may play a role in the reported prevalence of depression. In the lowest five countries: Philippines, Egypt, Indonesia, Guatemala, and Malaysia, it may be more taboo in their cultures to openly talk about depression or other mental health concerns. However in the top countries: Ukraine, United States, Australia, Brazil, and Finland, mental health may be openly talked about and have resources provided for mental health concerns.\n\nprev = wd_data.sort_values(by = 'prevalence')\nprev.plot(x = 'country', y = 'prevalence', kind = 'barh', figsize = (12, 7), color = 'skyblue')\n\nplt.title('Depression Prevalence Rates')\nplt.xlabel('Prevalence of Depression')\nplt.tight_layout()\n\n\n\n\n\nHappiness Scores and Depression Prevalence\nI wanted to visualize both dataset in one data visualization so I combined the World Happiness data and World Depression data by making a new dataframe with just Country, Happiness Score, and Depression Prevalence. I got the country name using a for loop and added depression prevalence for each country.\n\ncombined = wh_data[['Country', 'Happiness score']].copy()\n\n\ndepcol = []\n\nfor country in combined['Country']:\n    if country == 'Czechia':   \n        row = wd_data.loc[wd_data['country'] == 'Czech Republic']\n        dprev = list(row['prevalence'])\n        depcol.append(dprev)\n    elif country in common_country:\n        row = wd_data.loc[wd_data['country'] == country]\n        dprev = list(row['prevalence'])\n        depcol.append(dprev)\n    else:\n        depcol.append([0])\n\ndcol = sum(depcol,[])\n\n# adding depression column to happiness data \ncombined['Depression prevalence'] = dcol\ncombined = combined[combined['Depression prevalence'] != 0]\n\nThe countries are sorted by happiness scores, from highest to lowest.\n\nBy ordering the countries in this way, the graph interestingly shows how countries with lower happiness scores have lower depression prevalence as well. Meanwhile, countries with high happiness scores have higher prevalence of depression than those with lower happiness scores.\n\n\ncombined_melt = pd.melt(combined.sort_values(by='Happiness score'), id_vars = 'Country', \n                        value_vars = ['Happiness score', 'Depression prevalence'],\n                        var_name = 'Score', value_name = 'Score Value')\n\nfig = px.strip(combined_melt, x = 'Score Value', \n               y = 'Country', \n               orientation = 'v', \n               color_discrete_sequence=['orange','blue'],\n               color = 'Score',\n               height = 800,\n               title = 'Happiness Score and Depression Prevalence of Countries Sorted by Happiness Score')\nfig.show()\n\n\n                                                \n\n\n\n\nRelationship Between Happiness Score vs Depression Prevalence?\nWhen looking at the plot above, I saw that there seems to be a slight positive correlation so I created a scatter plot to see the relationship between happiness score and depression prevalence.\n\nfig = px.scatter(combined, x = 'Happiness score', \n                 y = 'Depression prevalence', \n                 color = 'Country',\n                 log_x = True,\n                 title = 'Happiness Score and Depression Prevalence of Countries')\nfig.show()\n\n\n                                                \n\n\nAgain, there seems to be a slight positive correlation between the two variables in the scatter plot as well. This suggests the concern that I mentioned above on who is able and not able to be represented in the reports. Countries with lower happiness score may have lower depression scores as well due to lack of resources or cultural sensitivities towards the topic of mental health.\n\nfig = px.scatter(combined, x='Happiness score', y='Depression prevalence', trendline=\"lowess\",\n                 trendline_color_override = 'red',\n                 title = 'Happiness Score and Depression Prevalence Relation with Regression Line')\nfig.show()\n\n\n                                                \n\n\n\n\n\nRelationship Between Valence and Happiness and Depression Scores?\nWould songs with high valence be more popular in countries with higher happiness scores/low depression prevalence and not as popular in countries with lower happiness scores/higher depression prevalence?\nAs mentioned above, since valence is the measure of positivity in a song, I wanted to see whether there is a relationship between countries with high happiness scores and the popular songs’ valence score.\nI set the size of each point to be the average valence score for each country’s playlist. The visualization however did not provide much information as the points were all similar in size. I assume that happiness or depression scores do not play a role in the songs that get popular as all countries seem to have similar valence averages.\n\n# valence scores sorted by Highest Happiness Score to Lowest\navg_val = top10_df.groupby('playlist')['valence'].mean().reset_index()\nval_sorted = avg_val.merge(top10_df, on = 'playlist').sort_values(by = 'Happiness Score', ascending = False)\n\nfig = px.scatter(val_sorted, x = 'Happiness Score', \n                 y = 'Depression Prevalence', \n                 color = 'playlist',\n                 log_x = True,\n                 size = 'valence_x',\n                 range_x = [3, 9],\n                 range_y = [3, 8],\n                 width = 1085,\n                 title = 'Happiness Score and Depression Prevalence with Valence as Point Size')\nfig.show()\n\n\n                                                \n\n\nTo visualize it more, I sorted the playlists by happiness scores from highest to lowest and highlighted countries with high average valence scores with orange, and low average valence scores with blue. From this visualization, I was able to see that the countries’ playlists with highest valences were not countries with high happiness scores.\n\nCountries with high average valence were mostly ranked in the mid to lower half of the happiness dataset.\nSweden, which placed 4th highest in happiness score, has a relatively low average valence.\nMalaysia, Indonesia, and Ukraine, which had low average valence scores, also ranked low in happiness score as well.\nSome countries with lower happiness scores have higher valence average than higher happiness score/low depression prevalence countries\n\n\n# valence scores sorted by Highest Happiness Score to Lowest\navg_val = top10_df.groupby('playlist')['valence'].mean().reset_index()\nval_sorted = avg_val.merge(top10_df, on = 'playlist').sort_values(by = 'Happiness Score')\n\nbarcolors = []\n\nfor i in val_sorted['playlist']:\n  if i in ['Top Songs - Argentina', 'Top Songs - Spain', 'Top Songs - Mexico', 'Top Songs - South Korea', 'Top Songs - Guatemala']:\n    barcolors.append('orange')\n  elif i in ['Top Songs - Sweden', 'Top Songs - Saudi Arabia', 'Top Songs - Ukraine', 'Top Songs - Malaysia', 'Top Songs - Indonesia']:\n    barcolors.append('skyblue')\n  else:\n    barcolors.append('gray')\n\nplt.figure(figsize=(12,10))\nplt.barh(val_sorted['playlist'], val_sorted['valence_x'], color = barcolors)\n\nplt.title('Playlists Sorted by Happiness Score with High and Low Valence Mean Highlights')\nplt.xlabel('Happiness Score')\nplt.tight_layout()\n\n\n\n\nThere seems to be not much correlation between happiness score of country and valence score of country’s popular songs. These scatter plots below also show no strong positive correlation between Happiness Score or Depression Prevalence and Valence.\n\nsns.scatterplot(data = top10_df, x = 'Happiness Score', y = 'valence')\nplt.title('Happiness Score and Valence Relation')\nplt.show()\n\n\n\n\n\nsns.scatterplot(data = top10_df, x = 'Depression Prevalence', y = 'valence' )\nplt.title('Depression Prevalence and Valence Relation')\nplt.show()"
  },
  {
    "objectID": "posts/final_audiofeatures.html#audio-feature-trends-for",
    "href": "posts/final_audiofeatures.html#audio-feature-trends-for",
    "title": "mikaylasblog",
    "section": "Audio Feature Trends for:",
    "text": "Audio Feature Trends for:\n\n10 Highest & Lowest Happiness Countries and 10 Highest & Lowest Depression Countries\nI felt the data for the histogram above was too small to depict an overall trend so I truncated the data to include: >1. Top 10 happiness score countries’ playlists audio features >2. Low 10 happiness score countries’ playlists audio features >3. Top 10 depression prevalence countries’ playlists audio features >4. Low 10 depression prevalence countries’ playlists audio features\nBy looking at combined audio feature trends for each group, I wanted to see whether there is a relationship or how much audio feature trends differ by comparing the different groups.\n\nTop 10 happiness score countries include:\nFinland, Denmark, Netherlands, Sweden, Norway, Israel, New Zealand, Austria, Australia, and Ireland.\nLow 10 happiness score countries include:\nMalaysia, Peru, Vietnam, Indonesia, South Africa, Ukraine, Morocco, Turkey, Egypt, and India.\nTop 10 depression prevalence countries include:\nUkraine, United States, Australia, Brazil, Finland, New Zealand, Germany, Spain, Czech Republic, and Hungary.\nLow 10 depression prevalence countries include:\nTurkey, Mexico, Japan, South Korea, Vietnam, Malaysia, Guatemala, Indonesia, Egypt, and Philippines.\n\n\nsns.set(style = 'darkgrid')\n\n# getting top 10 highest and lowest happiness score countries playlist\ntrunc_wh = top10_df.sort_values(['Happiness Score','playlist'], ignore_index=True, ascending = False).groupby('playlist')[['playlist','acousticness','danceability','energy','instrumentalness','valence','Happiness Score','Depression Prevalence']].head(10)\nhh = trunc_wh[:100]\nlh = trunc_wh[-100:]\n\n# getting top 10 highest and lowest depression prevalence countries playlist\ntrunc_wd = top10_df.sort_values(['Depression Prevalence', 'playlist'], ignore_index=True, ascending = False).groupby('playlist')[['playlist','acousticness','danceability','energy','instrumentalness','valence','Happiness Score','Depression Prevalence']].head(10)\nhd = trunc_wd[:100]\nld = trunc_wd[-100:]\n\nhighlow_data = [hh, hd, lh, ld]\n\naf = ['acousticness','danceability','energy','instrumentalness','valence']\nsubtitles = ['10 Highest Happiness Score Countries','10 Highest Depression Prevalence Countries', '10 Lowest Happiness Score Countries','10 Lowest Depression Prevalence Countries']\n\nfor s in range(len(highlow_data)):\n    data = highlow_data[s]\n    fig, ax = plt.subplots(1, 5, figsize = (20,3))\n    \n    for i, feature in enumerate(af):\n        if feature == 'acousticness':\n            sns.histplot(data = data, x = feature, kde = True, \n                         bins = 10, color = 'purple', ax = ax[i])\n        elif feature == 'danceability':\n            sns.histplot(data = data, x = feature, kde = True, \n                         bins = 10, color = 'skyblue', ax = ax[i])\n        elif feature == 'energy':\n            sns.histplot(data = data, x = feature, kde = True, \n                         bins = 10, color = 'orange', ax = ax[i])\n        elif feature == 'instrumentalness':\n            sns.histplot(data = data, x = feature, kde = True, \n                         bins = 10, color = 'olive', ax = ax[i])\n        elif feature == 'valence':\n            sns.histplot(data = data, x = feature, kde = True, \n                         bins = 10, color = 'teal', ax = ax[i])\n    \n    fig.suptitle(subtitles[s])\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\nEven after plotting histograms for the 10 highest and lowest happiness and depression scores, there were no distinct audio feature trend shown by a group. All groups showed preferences for less acousitc and instrumental tracks, and fairly normal distribution for energy and valence. However the 10 lowest happiness score countries and 10 lowest depression prevalence countries showed more preference for more danceable music while the 10 highest happiness score and 10 highest depression prevalence countries showed more preference towards not too danceable or not danceable songs.\n\n\nDirect Comparisons of Histograms\nTo easily compare and distinguish any differences in audio feature trends, I directly compared audio feature trends for highest and lowest happiness score countries by creating a layered histogram. > The gray histogram represents lowest happiness score countries and the pink histogram represents the highest happiness score countries.\nI created a layered histogram within the same dataset to avoid plotting audio features of the same countries. I created another layered histogram for the depression data set as well to compare audio feature trends for highest and lowest prevalence of depression countries. > The gray histogram represents lowest prevalence countries and blue represent highest depression prevalence coutries.\n\n# plots for 10 highest and lowest happiness score countries\nhap_hl = [lh, hh]\n#for h in hap_hl:\nfig, ax = plt.subplots(1, 5, figsize = (20,3))\n\nfor z in range(len(hap_hl)):\n    if z == 0:\n        for i, feature in enumerate(af):\n            sns.histplot(data=hap_hl[z], x= feature, kde = True, \n                             color = 'gray',alpha=0.3, bins=10, multiple='layer',ax=ax[i])\n    elif z == 1:\n        for i, feature in enumerate(af):\n                sns.histplot(data=hap_hl[z], x= feature, kde = True, \n                             color = 'pink', alpha = 0.5, bins=10, multiple='layer',ax=ax[i])\n\nfig.suptitle('10 Highest and Lowest Happiness Score Countries', fontsize = 14)\n\nplt.legend(title = 'Happiness', bbox_to_anchor=(1.05, 1), loc = 'upper left', labels=['Low', 'High'])\nplt.subplots_adjust(wspace = 0.3)\nplt.show()\n\n# plots for 10 highest and lowest depression prevalence countries\ndep_hl = [ld, hd]\n\nfig, ax = plt.subplots(1, 5, figsize = (20,3))\nfor z in range(len(dep_hl)):\n    if z == 0:\n        for i, feature in enumerate(af):\n            sns.histplot(data=dep_hl[z], x= feature, kde = True, \n                             color = 'gray',alpha=0.3, bins=10, multiple='layer',ax=ax[i])\n    elif z == 1:\n        for i, feature in enumerate(af):\n                sns.histplot(data=dep_hl[z], x= feature, kde = True, \n                             color = 'skyblue', alpha = 0.5, bins=10, multiple='layer',ax=ax[i])\n\nfig.suptitle('10 Highest and Lowest Depression Prevalence Countries', fontsize = 14)\nplt.legend(title = 'Depression', bbox_to_anchor=(1.05, 1), loc = 'upper left', labels=['Low', 'High'])\nplt.subplots_adjust(wspace = 0.3)\nplt.show()\n\n\n\n\n\n\n\n\nHighest vs. Lowest Happiness Score Countries\nAcousticness > Happiness Data > * Higher happiness score countries seem to lack acoustic hits in their playlists as indicated by the sharp peak skewed right, whereas the lower happiness score countries have a more spread out, broad distribution that is however still slightly skewed to the right. > > Depression Data > * The depression data also shows a general lack of acoustic hits with higher depression prevalence countries having a sharper peak than lower depression countries. The distribution for lower depression countries is broader compared to higher depression countries but both are skewed to the right.\nDanceability > Happiness Data > * Danceability seems to be slighly more left skewed for lower happiness score countries than higher happiness score countries. Higher happiness countries’ danceability seems to be more normally distributed, indicating a preferences for not overly danceable or not danceable songs. > > Depression Data > * Countries with higher and lower prevalence of depression seems to have a similar distribution for danceability. However lower depression countries trend is slightly more skew to the left, indicating preference for more danceable music. Higher depression prevalence countries is more normally distributed than lower depression countries, but is still skewed to the left.\nEnergy > Happiness Data > * The trend for energy also seems to be similar, as both are fairly normally distributed. However the mean energy for higher happiness countries seem to be higher than for lower happiness countries. This is interesting as lower happiness score countries had a slightly more left skew for danceability. > > Depression Data > * Lower depression prevalence countries is more normally distributed than higher depression prevalence countries, indicating a preference for not too intense or quiet music. Countries with higher prevalence of depression is more left skewed, indicating stronger preference for intense, energetic music.\nInstrumentalness >Happiness Data > * Instrumentalness seems to be similar for both, with the same skew to the right. This again indicates that most popular songs across the world, regardless of happiness score have a preference for songs with more vocals rather than pure instrumentals. > > Depression Data > * Instrumentalness seems to be similar for both in this dataset as well, with the same skew to the right. Higher depression countries is slightly more shifted to the right but both are very left skewed, indicating preference for song with more vocals regardless of depression prevalence.\nValence > Happiness Data > * Although both seems to be fairly normally distributed, lower happiness score countries has a more right skew and lower mean for valence than higher happiness score countries. The high happiness countries has a more normally distributed valence trend with a very slight left skew with the higher mean value. > > Depression Data > * Both are fairly normally distributed here as well, but countries with higher depression prevalence seems to be more left skewed with a higher mean, showing a stronger preference for higher valence songs. Low depression prevalence countries is normally distributed, indicating preference for not overly happy or overly sad songs."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "mikaylasblog",
    "section": "",
    "text": "Introduction\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 9, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 6, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  }
]